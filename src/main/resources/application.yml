spring:
  datasource:
    url: jdbc:postgresql://localhost:54320/weather
    username: dilith914
    password: ${POSTGRESQL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  properties:
    hibernate:
      format_sql: true
      dialect: org.hibernate.dialect.PostgreSQL81Dialect
  kafka:
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      group-id: group_id
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:29092
    consumer:
      bootstrap-servers: localhost:29092
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
auto:
  create:
    topics:
      enable: 'true'
topic:
  name:
    producer: test

app:
  weatherApi:
    baseUrl: http://api.weatherapi.com
    accessKey: ${WEATHER_API_ACCESS_KEY}
  kafka:
    topics:
      rawCurrentWeatherData: RawCurrentWeatherData